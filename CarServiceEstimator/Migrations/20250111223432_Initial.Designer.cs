// <auto-generated />
using System;
using CarServiceEstimator.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarServiceEstimator.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250111223432_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CarServiceEstimatorSchema")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarServiceEstimator.Models.Client", b =>
                {
                    b.Property<Guid>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("Client", "CarServiceEstimatorSchema");
                });

            modelBuilder.Entity("CarServiceEstimator.Models.Deviz", b =>
                {
                    b.Property<Guid>("IdDeviz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeviz")
                        .HasColumnType("datetime2");

                    b.Property<string>("DenumireDeviz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MarcaModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrInmatriculare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDeviz");

                    b.HasIndex("IdClient");

                    b.ToTable("Deviz", "CarServiceEstimatorSchema");
                });

            modelBuilder.Entity("CarServiceEstimator.Models.DevizContinut", b =>
                {
                    b.Property<Guid>("IdDevizContinut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<Guid>("IdDeviz")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdReper")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Nrc")
                        .HasColumnType("int");

                    b.Property<decimal>("PretUnitar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDevizContinut");

                    b.HasIndex("IdDeviz");

                    b.HasIndex("IdReper");

                    b.ToTable("DevizContinut", "CarServiceEstimatorSchema");
                });

            modelBuilder.Entity("CarServiceEstimator.Models.Reper", b =>
                {
                    b.Property<Guid>("IdReper")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DenumireReper")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PretUnitar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpImagine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdReper");

                    b.ToTable("Reper", "CarServiceEstimatorSchema");
                });

            modelBuilder.Entity("CarServiceEstimator.Models.Deviz", b =>
                {
                    b.HasOne("CarServiceEstimator.Models.Client", "Client")
                        .WithMany("Devize")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CarServiceEstimator.Models.DevizContinut", b =>
                {
                    b.HasOne("CarServiceEstimator.Models.Deviz", "Deviz")
                        .WithMany("DevizeContinut")
                        .HasForeignKey("IdDeviz")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarServiceEstimator.Models.Reper", "Reper")
                        .WithMany("DevizeContinut")
                        .HasForeignKey("IdReper")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deviz");

                    b.Navigation("Reper");
                });

            modelBuilder.Entity("CarServiceEstimator.Models.Client", b =>
                {
                    b.Navigation("Devize");
                });

            modelBuilder.Entity("CarServiceEstimator.Models.Deviz", b =>
                {
                    b.Navigation("DevizeContinut");
                });

            modelBuilder.Entity("CarServiceEstimator.Models.Reper", b =>
                {
                    b.Navigation("DevizeContinut");
                });
#pragma warning restore 612, 618
        }
    }
}
